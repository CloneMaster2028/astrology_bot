2025-09-20 18:11:27,322 - database - INFO - Inserted 12 sample facts
2025-09-20 18:11:27,519 - database - INFO - Database initialized successfully
2025-09-20 18:11:27,540 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:11:27,686 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:11:27,737 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:11:31,990 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:11:32,004 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:12:49,900 - database - INFO - Database initialized successfully
2025-09-20 18:12:49,908 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:12:49,909 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:12:49,909 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:13:02,004 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:13:02,084 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:14:01,828 - database - INFO - Database initialized successfully
2025-09-20 18:14:01,829 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:14:01,829 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:14:01,830 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:14:02,473 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:14:02,477 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:16:30,814 - database - INFO - Database initialized successfully
2025-09-20 18:16:30,818 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:16:30,820 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:16:30,820 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:16:30,832 - __main__ - ERROR - Fatal error: AsyncClient.__init__() got an unexpected keyword argument 'proxies'
2025-09-20 18:16:30,835 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:17:31,478 - database - INFO - Database initialized successfully
2025-09-20 18:17:31,479 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:17:31,479 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:17:31,479 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:17:32,777 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:17:32,782 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:17:32,901 - database - INFO - Database initialized successfully
2025-09-20 18:17:32,903 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:17:32,904 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:17:32,904 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:17:35,194 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:17:35,199 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:18:27,360 - database - INFO - Database initialized successfully
2025-09-20 18:18:27,361 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:18:27,361 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:18:27,361 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:18:29,059 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:18:29,062 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:19:55,647 - database - INFO - Database initialized successfully
2025-09-20 18:19:55,649 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:19:55,652 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:19:55,653 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:19:57,424 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:19:57,430 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:20:19,773 - database - INFO - Database initialized successfully
2025-09-20 18:20:19,774 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:20:19,779 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:20:19,779 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:20:22,038 - __main__ - ERROR - Fatal error: 'Updater' object has no attribute '_Updater__polling_cleanup_cb' and no __dict__ for setting new attributes
2025-09-20 18:20:22,040 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:26:20,174 - database - INFO - Database initialized successfully
2025-09-20 18:26:20,178 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:26:20,179 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:26:20,179 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:26:21,752 - __main__ - INFO - Bot is ready! Press Ctrl+C to stop.
2025-09-20 18:26:21,874 - __main__ - INFO - Bot stopped by user
2025-09-20 18:26:21,899 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:27:32,934 - database - INFO - Database initialized successfully
2025-09-20 18:27:32,935 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:27:32,936 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:27:32,936 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:27:33,385 - __main__ - INFO - Bot stopped by user
2025-09-20 18:27:33,388 - __main__ - INFO - Bot shutdown complete
2025-09-20 18:30:35,448 - database - INFO - Database initialized successfully
2025-09-20 18:30:35,449 - __main__ - INFO - Astrology bot initialized successfully
2025-09-20 18:30:35,449 - __main__ - INFO - Starting Astrology Bot...
2025-09-20 18:30:35,450 - __main__ - INFO - Admin IDs: [7420986072]
2025-09-20 18:30:36,238 - __main__ - INFO - Bot is ready! Press Ctrl+C to stop.
2025-09-20 18:30:38,142 - apscheduler.scheduler - INFO - Scheduler started
2025-09-20 18:30:39,269 - __main__ - INFO - User 7420986072 (@hnaruto10) started the bot
2025-09-20 18:30:39,745 - __main__ - INFO - User 7420986072 (@hnaruto10) started the bot
2025-09-20 18:30:40,191 - __main__ - INFO - User 7420986072 (@hnaruto10) started the bot
2025-09-20 18:31:01,060 - __main__ - INFO - User 7420986072 starting DOB setup
2025-09-20 18:31:02,337 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:31:06,414 - apscheduler.scheduler - INFO - Removed job 1e3fe34084b24e99b69887513cb93a19
2025-09-20 18:31:06,858 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:31:10,263 - apscheduler.scheduler - INFO - Removed job 885d68fcb915498aa56b34ad75cd4829
2025-09-20 18:31:10,713 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:31:13,541 - apscheduler.scheduler - INFO - Removed job 63c2a26e3bfb4071a0962d0c8d2fbb28
2025-09-20 18:31:13,550 - database - INFO - Saved DOB for user 7420986072: 2006-12-05
2025-09-20 18:31:13,551 - __main__ - INFO - User 7420986072 DOB saved: 2006-12-05
2025-09-20 18:33:34,396 - __main__ - INFO - User 6825929869 (@darkdevel0) started the bot
2025-09-20 18:33:42,448 - __main__ - INFO - User 6825929869 requested numerology info
2025-09-20 18:33:43,307 - __main__ - INFO - User 6825929869 requested numerology info
2025-09-20 18:33:50,865 - __main__ - INFO - User 6825929869 starting DOB setup
2025-09-20 18:33:52,160 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:33:57,657 - apscheduler.scheduler - INFO - Removed job fde19fc34b9b4120b38afd4a1286433c
2025-09-20 18:33:58,639 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:34:02,370 - apscheduler.scheduler - INFO - Removed job 2894281f1d6946488b9c3daa8bed25bf
2025-09-20 18:34:03,048 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 18:34:06,840 - apscheduler.scheduler - INFO - Removed job d1b4536dd606467d80a57661218ac729
2025-09-20 18:34:06,849 - database - INFO - Saved DOB for user 6825929869: 2004-05-02
2025-09-20 18:34:06,850 - __main__ - INFO - User 6825929869 DOB saved: 2004-05-02
2025-09-20 18:34:10,566 - __main__ - INFO - User 6825929869 requested numerology info
2025-09-20 18:34:45,777 - __main__ - INFO - User 6825929869 requested random fact
2025-09-20 18:41:30,965 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
    yield
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
    await do_action()
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
    action_cb_task.result()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    result = await request.post(
             ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 18:41:32,499 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
    yield
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
    await do_action()
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
    action_cb_task.result()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    result = await request.post(
             ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 18:41:34,008 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
    yield
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
    await do_action()
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
    action_cb_task.result()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    result = await request.post(
             ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 19:18:08,392 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
    yield
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
    await do_action()
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
    action_cb_task.result()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    result = await request.post(
             ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 19:18:12,777 - __main__ - INFO - User 1755598694 (@Unknown) started the bot
2025-09-20 20:49:47,500 - __main__ - INFO - User 7420986072 requested today's reading
2025-09-20 20:50:01,561 - __main__ - INFO - User 7420986072 requested support info
2025-09-20 20:50:10,270 - __main__ - INFO - User 7420986072 requested help
2025-09-20 20:50:26,986 - __main__ - INFO - User 7420986072 requested random fact
2025-09-20 20:50:36,447 - __main__ - INFO - User 7420986072 requested numerology info
2025-09-20 20:50:45,017 - __main__ - INFO - User 7420986072 requested today's reading
2025-09-20 21:09:59,644 - __main__ - INFO - User 7420986072 starting DOB setup
2025-09-20 21:10:01,079 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 21:10:05,167 - apscheduler.scheduler - INFO - Removed job d93ba6a633db41419d5b8ecf05249b5b
2025-09-20 21:10:05,578 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 21:10:06,035 - apscheduler.scheduler - INFO - Removed job e2dd211776814bc8b4884619718cdc7b
2025-09-20 21:10:06,498 - apscheduler.scheduler - INFO - Added job "_trigger_timeout" to job store "default"
2025-09-20 21:10:10,165 - apscheduler.scheduler - INFO - Removed job 1be585a02ff24be19ede939714e0d361
2025-09-20 21:10:10,219 - database - INFO - Saved DOB for user 7420986072: 2008-02-21
2025-09-20 21:10:10,221 - __main__ - INFO - User 7420986072 DOB saved: 2008-02-21
2025-09-20 21:10:16,621 - __main__ - INFO - User 7420986072 requested today's reading
2025-09-20 21:10:24,958 - __main__ - INFO - User 7420986072 requested numerology info
2025-09-20 21:10:45,576 - __main__ - INFO - User 7420986072 requested random fact
2025-09-20 21:10:51,437 - __main__ - INFO - User 7420986072 requested support info
2025-09-20 21:11:07,202 - __main__ - INFO - User 7420986072 requested random fact
2025-09-20 21:11:08,867 - __main__ - INFO - User 7420986072 requested help
2025-09-20 21:19:40,166 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    stream=AsyncResponseStream(resp.stream),
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
                message=(
                ^^^^^^^^^
    ...<6 lines>...
    except httpx.HTTPError as err:
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    request=request,
       ^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
            except BaseException as exc:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    if not response.has_redirect_location:
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    history = history + [response]
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    self.cookies.extract_cookies(response)
                   ~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    auth=auth,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    headers=resp.headers,
     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    HTTPCORE_EXC_MAP = {
            ^^^^^^^^^^^^
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
                self._running = False
                          ^^^^^^^^^^^
    ...<3 lines>...
        self,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    chat_id: Union[int, str],
              ^^^^^^^^^^^^^^^
    ...<9 lines>...
    protect_content: ODVInput[bool] = DEFAULT_NONE,
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
        )
    
    ...<7 lines>...
        *,
        ^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    result = await self._post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        api_kwargs=api_kwargs,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
        # This is a property because defaults shouldn't be changed at runtime
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        .. versionadded:: 20.0
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    # Since the bot is to be initialized only once, we can also use it for
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    
    
    ...<7 lines>...
        connect_timeout=connect_timeout,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    """
    
    ...<7 lines>...
    # warning in that case.
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 21:19:41,176 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    stream=AsyncResponseStream(resp.stream),
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
                message=(
                ^^^^^^^^^
    ...<6 lines>...
    except httpx.HTTPError as err:
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    request=request,
       ^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
            except BaseException as exc:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    if not response.has_redirect_location:
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    history = history + [response]
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    self.cookies.extract_cookies(response)
                   ~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    auth=auth,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    headers=resp.headers,
     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    HTTPCORE_EXC_MAP = {
            ^^^^^^^^^^^^
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
                self._running = False
                          ^^^^^^^^^^^
    ...<3 lines>...
        self,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    chat_id: Union[int, str],
              ^^^^^^^^^^^^^^^
    ...<9 lines>...
    protect_content: ODVInput[bool] = DEFAULT_NONE,
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
        )
    
    ...<7 lines>...
        *,
        ^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    result = await self._post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        api_kwargs=api_kwargs,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
        # This is a property because defaults shouldn't be changed at runtime
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        .. versionadded:: 20.0
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    # Since the bot is to be initialized only once, we can also use it for
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    
    
    ...<7 lines>...
        connect_timeout=connect_timeout,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    """
    
    ...<7 lines>...
    # warning in that case.
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 21:19:42,691 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    stream=AsyncResponseStream(resp.stream),
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
                message=(
                ^^^^^^^^^
    ...<6 lines>...
    except httpx.HTTPError as err:
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    request=request,
       ^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
            except BaseException as exc:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    if not response.has_redirect_location:
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    history = history + [response]
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    self.cookies.extract_cookies(response)
                   ~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    auth=auth,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    headers=resp.headers,
     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    HTTPCORE_EXC_MAP = {
            ^^^^^^^^^^^^
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
                self._running = False
                          ^^^^^^^^^^^
    ...<3 lines>...
        self,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    chat_id: Union[int, str],
              ^^^^^^^^^^^^^^^
    ...<9 lines>...
    protect_content: ODVInput[bool] = DEFAULT_NONE,
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
        )
    
    ...<7 lines>...
        *,
        ^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    result = await self._post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        api_kwargs=api_kwargs,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
        # This is a property because defaults shouldn't be changed at runtime
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        .. versionadded:: 20.0
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    # Since the bot is to be initialized only once, we can also use it for
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    
    
    ...<7 lines>...
        connect_timeout=connect_timeout,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    """
    
    ...<7 lines>...
    # warning in that case.
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-20 21:19:44,961 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 69, in map_httpcore_exceptions
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 373, in handle_async_request
    stream=AsyncResponseStream(resp.stream),
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pool_request.request
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 101, in handle_async_request
    raise exc
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 78, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_async\connection.py", line 124, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_backends\anyio.py", line 113, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 279, in do_request
                message=(
                ^^^^^^^^^
    ...<6 lines>...
    except httpx.HTTPError as err:
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1574, in request
    request=request,
       ^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1661, in send
            except BaseException as exc:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1689, in _send_handling_auth
    if not response.has_redirect_location:
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    history = history + [response]
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1726, in _send_handling_redirects
    self.cookies.extract_cookies(response)
                   ~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_client.py", line 1763, in _send_single_request
    auth=auth,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 372, in handle_async_request
    headers=resp.headers,
     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\httpx\_transports\default.py", line 86, in map_httpcore_exceptions
    HTTPCORE_EXC_MAP = {
            ^^^^^^^^^^^^
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 122, in network_retry_loop
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_utils\networkloop.py", line 115, in do_action
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_updater.py", line 340, in polling_action_cb
                self._running = False
                          ^^^^^^^^^^^
    ...<3 lines>...
        self,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 676, in get_updates
    chat_id: Union[int, str],
              ^^^^^^^^^^^^^^^
    ...<9 lines>...
    protect_content: ODVInput[bool] = DEFAULT_NONE,
    ^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 4780, in get_updates
        )
    
    ...<7 lines>...
        *,
        ^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 703, in _post
    result = await self._post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        api_kwargs=api_kwargs,
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\ext\_extbot.py", line 372, in _do_post
        # This is a property because defaults shouldn't be changed at runtime
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        .. versionadded:: 20.0
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\_bot.py", line 732, in _do_post
    # Since the bot is to be initialized only once, we can also use it for
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    
    
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 198, in post
    
    
    ...<7 lines>...
        connect_timeout=connect_timeout,
        ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_baserequest.py", line 305, in _request_wrapper
    """
    
    ...<7 lines>...
    # warning in that case.
    ^^^^^
  File "C:\Users\hinat\AppData\Local\Programs\Python\Python313\Lib\site-packages\telegram\request\_httpxrequest.py", line 303, in do_request
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
